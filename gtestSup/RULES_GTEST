# Definitions for Google Test / Google Mock

# The EPICS module GTEST (https://github.com/epics-modules/gtest)
# provides the Google Test and Google Mock libraries (statically built)
# and a tap-enhanced version of gtest_main in library epics_gtest_main

ifndef RULES_GTEST_INCLUDED
RULES_GTEST_INCLUDED=1

define gtest_prod_template
  ifeq ($(CMPLR_CLASS),msvc)
    $(1)_LDFLAGS_WIN32 += -subsystem:console
  endif
  $(1)_SYS_LIBS_Linux += pthread
  $(1)_LIBS += epics_gtest_main gmock gtest
endef

$(foreach testprod, $(GTESTPROD_HOST), $(eval $(call gtest_prod_template,$(testprod))))
TESTPROD_HOST += $(GTESTPROD_HOST)

# Enable testing if this host can run tests for the current target
ifneq (,$(findstring $(T_A),$(EPICS_HOST_ARCH) $(CROSS_COMPILER_RUNTEST_ARCHS)))
RUNTESTS_ENABLED = YES
GTESTLISTS = $(addsuffix .list,$(GTESTS))
JUNITFILES = $(addsuffix -results.xml,$(GTESTS))
endif

#---------------------------------------------------------------
# Automated testing using Google Test

GTESTS_MAKE = $(addsuffix .make,$(GTESTS))
GTESTS_RUN = $(addsuffix .run,$(GTESTS))
.PHONY: $(GTESTS_RUN)

runtests: $(GTESTS_RUN)

$(GTESTLISTS): %.list: %$(EXE)
	@$(RM) $@
	"./$<" --gtest_list_tests > $@

$(GTESTS_MAKE): %.make: %.list
	@$(RM) $@
	@$(PERL) $(GTEST_BIN)/makeFromList.pl $*

include $(GTESTS_MAKE)

# Can't do "undefine TAPFILES" so only define TAPFILES here if non-empty
# (avoid old test-results rule breaking for TAPFILES = <space>)
ifneq ($(strip $(foreach gtest, $(GTESTS), $($(gtest)_TAPFILES))),)
TAPFILES += $(foreach gtest, $(GTESTS), $($(gtest)_TAPFILES))
endif

else
    $(warning Warning: cfg/RULES_GTEST file included more than once.)
endif # RULES_GTEST_INCLUDED
